// <auto-generated />
using System;
using InterviewTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterviewTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250914092758_UpdateInterviewDateType")]
    partial class UpdateInterviewDateType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("InterviewTracker.Models.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalaryExpectation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Seniority")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("InterviewTracker.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InterviewTracker.Models.Interview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DurationMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Outcome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("InterviewTracker.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("AnswerQuality")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("Difficulty")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InterviewId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAskedByYou")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InterviewId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("InterviewTracker.Models.QuestionTopic", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TechTopicId")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId", "TechTopicId");

                    b.HasIndex("TechTopicId");

                    b.ToTable("QuestionTopics");
                });

            modelBuilder.Entity("InterviewTracker.Models.TechTopic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("TechTopics");
                });

            modelBuilder.Entity("InterviewTracker.Models.Application", b =>
                {
                    b.HasOne("InterviewTracker.Models.Company", "Company")
                        .WithMany("Applications")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InterviewTracker.Models.Interview", b =>
                {
                    b.HasOne("InterviewTracker.Models.Application", "Application")
                        .WithMany("Interviews")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("InterviewTracker.Models.Question", b =>
                {
                    b.HasOne("InterviewTracker.Models.Interview", "Interview")
                        .WithMany("Questions")
                        .HasForeignKey("InterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interview");
                });

            modelBuilder.Entity("InterviewTracker.Models.QuestionTopic", b =>
                {
                    b.HasOne("InterviewTracker.Models.Question", "Question")
                        .WithMany("Topics")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterviewTracker.Models.TechTopic", "TechTopic")
                        .WithMany("Questions")
                        .HasForeignKey("TechTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("TechTopic");
                });

            modelBuilder.Entity("InterviewTracker.Models.Application", b =>
                {
                    b.Navigation("Interviews");
                });

            modelBuilder.Entity("InterviewTracker.Models.Company", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("InterviewTracker.Models.Interview", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("InterviewTracker.Models.Question", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("InterviewTracker.Models.TechTopic", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
